âœ… Map Summary in Java

ðŸ”¹ Map stores data in key-value pairs.
ðŸ”¹ It is NOT part of the Collection interface (but exists in java.util).
ðŸ”¹ Each key is unique and maps to exactly one value.

ðŸ”¸ Common Implementations:
â–ª HashMap â€“ No guaranteed order.
â–ª LinkedHashMap â€“ Maintains insertion order.
â–ª TreeMap â€“ Maintains keys in sorted (natural or custom) order.
â–ª Hashtable â€“ Legacy, synchronized, no null keys or values.
â–ª ConcurrentHashMap â€“ Thread-safe version of HashMap.

ðŸ”¸ Characteristics:
â–ª Keys must be unique. Duplicate keys overwrite existing values.
â–ª One null key is allowed in HashMap, but not in Hashtable or TreeMap.
â–ª Multiple null values are allowed in HashMap and LinkedHashMap.

ðŸ”¸ Useful Methods:
â–ª put(key, value) â€“ Inserts or updates mapping.
â–ª get(key) â€“ Returns value for key or null if not present.
â–ª containsKey(key) / containsValue(value) â€“ Checks existence.
â–ª remove(key) â€“ Removes entry by key.
â–ª keySet() â€“ Returns all keys.
â–ª values() â€“ Returns all values.
â–ª entrySet() â€“ Returns all key-value pairs as a Set.

ðŸ”¸ Use Cases:
â–ª Fast lookups (HashMap).
â–ª Ordered access (LinkedHashMap).
â–ª Sorted access (TreeMap).
â–ª Thread-safe maps (ConcurrentHashMap).